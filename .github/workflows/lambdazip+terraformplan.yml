name: LambdaZip + Terraform Plan

on:
  push:
    branches:
      - '**'  # Trigger on any branch and all subdirectories
    paths-ignore:
      - '**.md'  # Ignore markdown files
  pull_request:
    branches:
      - '*'  # Trigger on any branch
  workflow_dispatch:  # Allows manual triggering

jobs:
  zip-lambda-functions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies and zip ingest function
        run: |
          cd lambda_functions/ingest_function
          pip install -r requirements.txt -t .
          zip -r ../../ingest_function.zip .
          
      - name: Install dependencies and zip query function  
        run: |
          cd lambda_functions/query_function
          pip install -r requirements.txt -t .
          zip -r ../../query_function.zip .
        
  terraform-plan:
    runs-on: ubuntu-latest
    needs: zip-lambda-functions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.11.1

      - name: Run Terraform Plan
        working-directory: ./terraform
        run: |
          terraform init
          terraform plan -var-file=terraform.tfvars -out=tfplan
    
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./terraform/tfplan
          if-no-files-found: error
    
  create-pr:
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref != 'refs/heads/main' && success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Terraform plan ready for apply"
          title: "Terraform changes ready for apply"
          body: "This PR contains Terraform changes that have been planned and are ready to be applied. The terraform-apply workflow will be triggered when this PR is merged to main."
          branch: terraform-changes-${{ github.run_id }}
          base: main