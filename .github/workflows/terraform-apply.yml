name: Terraform Apply

on:
  workflow_run:
    workflows: ["LambdaZip + Terraform Plan"]
    types:
      - completed
    branches:
      - main

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.11.1

      - name: Download Terraform Plan
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id
            });
            const matchArtifact = artifacts.data.artifacts.find((artifact) => artifact.name === "tfplan");
            if (!matchArtifact) {
              throw new Error('No tfplan artifact found.');
            }
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip'
            });
            const fs = require('fs');
            fs.writeFileSync('tfplan.zip', Buffer.from(download.data));

      - name: Extract Terraform Plan
        run: |
          unzip tfplan.zip
          rm tfplan.zip

      - name: Terraform Apply
        working-directory: ./terraform
        run: |
          terraform init
          terraform apply tfplan