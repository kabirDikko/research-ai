name: Terraform Apply & Serverless Deploy

on:
  push:
    branches:
      - main  # Only trigger on main branch
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  actions: read
  id-token: write  # Needed for AWS credential provider

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.11.1
      
      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init
      
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
      
      - name: Export Lambda Role ARN from Terraform
        working-directory: ./terraform
        id: tf_output
        run: |
          echo "MY_LAMBDA_ROLE_ARN=$(terraform output -raw lambda_role_arn)" >> $GITHUB_ENV
      
      - name: Serverless Deploy
        uses: serverless/serverless@v3
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          MY_LAMBDA_ROLE_ARN: ${{ env.MY_LAMBDA_ROLE_ARN }}
          SOURCE_BUCKET: ${{ env.SOURCE_BUCKET }}
          DESTINATION_BUCKET: ${{ env.DESTINATION_BUCKET }}
          FAILED_INGESTION_BUCKET: ${{ env.FAILED_INGESTION_BUCKET }}
